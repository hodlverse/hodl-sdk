{"version":3,"file":"sdk.cjs.development.js","sources":["../src/enums/ChainId.ts","../src/enums/Rounding.ts","../src/enums/TradeType.ts","../src/enums/KashiAction.ts","../src/constants/addresses.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/constants/index.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePairAddress.ts","../src/functions/sqrt.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../node_modules/regenerator-runtime/runtime.js","../src/types/MultiRouterTypes.ts","../src/types/LimitOrderTypes.ts","../src/entities/eip712.ts","../src/functions/validateSolidityTypeInstance.ts","../src/router.ts","../src/utils/MultiRouterMath.ts","../src/limitorder.ts"],"sourcesContent":["export enum ChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  BITCOIN_MAINNET= 1,\n  BITCOIN_TESTNET= 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  FANTOM = 250,\n  FANTOM_TESTNET = 4002,\n  XDAI = 100,\n  BSC = 56,\n  BSC_TESTNET = 97,\n  ARBITRUM = 42161,\n  ARBITRUM_TESTNET = 79377087078960,\n  MOONBEAM_TESTNET = 1287,\n  AVALANCHE = 43114,\n  AVALANCHE_TESTNET = 43113,\n  HECO = 128,\n  HECO_TESTNET = 256,\n  HARMONY = 1666600000,\n  HARMONY_TESTNET = 1666700000,\n  OKEX = 66,\n  OKEX_TESTNET = 65,\n  CELO = 42220,\n  PALM = 11297108109,\n  PALM_TESTNET = 11297108099\n}\n\n//  \"@hodlvalley/sdk\": \"git://github.com/hodlvalley/hodl-sdk.git\",\n","export enum Rounding {\n  ROUND_DOWN,\n  ROUND_HALF_UP,\n  ROUND_UP\n}\n","export enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT\n}\n","export enum KashiAction {\n  ADD_ASSET = 1,\n  REPAY = 2,\n  REMOVE_ASSET = 3,\n  REMOVE_COLLATERAL = 4,\n  BORROW = 5,\n  GET_REPAY_SHARE = 6,\n  GET_REPAY_PART = 7,\n  ACCRUE = 8,\n\n  // Functions that don't need accrue to be called\n  ADD_COLLATERAL = 10,\n  UPDATE_EXCHANGE_RATE = 11,\n\n  // Function on BentoBox\n  BENTO_DEPOSIT = 20,\n  BENTO_WITHDRAW = 21,\n  BENTO_TRANSFER = 22,\n  BENTO_TRANSFER_MULTIPLE = 23,\n  BENTO_SETAPPROVAL = 24,\n\n  // Any external call (except to BentoBox)\n  CALL = 30\n}\n","import { AddressMap } from \"../types\";\nimport { ChainId } from \"../enums\";\n\nexport const FACTORY_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0xae8b490cfeE5956925d81f8A729cF0C2f2C33ba4',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const ROUTER_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.RINKEBY]: '',\n  [ChainId.ROPSTEN]: '0x34CB6629a08F234F72e9DC5bE0FB352e88824d24',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MONEY_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n  [ChainId.ROPSTEN]: '0xE366ECf71a1A3c57a79F58Cd6295437EE9B9B71D',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const FARMING_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0x2AD945AE496C7D8aD980674967d7fFD3FaEd85a4', //0x816822D1AAfD3186873c702a96213fd41884BA38\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const STAKING_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0x2D3882b6451c93e0707bbF0C4F1F05EeB096afd5',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const TIME_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0xe7C693003B925633355759ACf6F3e6EAC4E0217d',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const MIGRATOR_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0x5ACdEa5DA498f0162c9d3f8174E05090F0024bc5',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const WETH_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0xA3B45B73067fd2282aAB67436747e9b310254EBd',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const BUYBACK_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0x8f9F1910f6fC071cC5D850AaA740F2C9795A1C9d',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n}\n\nexport const RESERVE_ADDRESS: { [chainId in ChainId]: string } = {\n  [ChainId.MAINNET]: '',\n  [ChainId.ROPSTEN]: '0x69a97d0092a43880210aFAe4e4971eb4DcC58f13',\n  [ChainId.RINKEBY]: '',\n  [ChainId.GÖRLI]: '',\n  [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '',\n  [ChainId.MATIC_TESTNET]: '',\n  [ChainId.XDAI]: '',\n  [ChainId.BSC]: '',\n  [ChainId.BSC_TESTNET]: '',\n  [ChainId.ARBITRUM]: '',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '',\n  [ChainId.AVALANCHE]: '',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '',\n  [ChainId.HECO_TESTNET]: '',\n  [ChainId.HARMONY]: '',\n  [ChainId.HARMONY_TESTNET]: '',\n  [ChainId.OKEX]: '',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.CELO]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: ''\n};\n\n\nexport const BENTOBOX_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const KASHI_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const MAKER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const HODL_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const HODL_MULTISWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const HODL_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const PEGGED_ORACLE_ADDRESS =\n  \"\";\n\nexport const HODL_TWAP_0_ORACLE_ADDRESS =\n  \"\";\n\nexport const HODL_TWAP_1_ORACLE_ADDRESS =\n  \"\";\n\nexport const CHAINLINK_ORACLE_ADDRESS =\n  \"\";\n\nexport const BORING_HELPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const STOP_LIMIT_ORDER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\",\n  [ChainId.RINKEBY]: \"\",\n  [ChainId.GÖRLI]: \"\",\n  [ChainId.KOVAN]: \"\",\n  [ChainId.FANTOM]: \"\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.BSC]: \"\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.ARBITRUM]: \"\",\n  [ChainId.ARBITRUM_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.CELO]: \"\",\n  [ChainId.PALM]: \"\",\n  [ChainId.PALM_TESTNET]: \"\"\n};\n\nexport const ARCHER_ROUTER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\"\n};\n\nexport const MINICHEF_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: \"\",\n  [ChainId.XDAI]: \"\",\n  [ChainId.HARMONY]: \"\"\n};\n\nexport const WETH9_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n  [ChainId.ROPSTEN]: \"0xA3B45B73067fd2282aAB67436747e9b310254EBd\",\n  [ChainId.RINKEBY]: \"0xc778417E063141139Fce010982780140Aa0cD5Ab\",\n  [ChainId.GÖRLI]: \"0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6\",\n  [ChainId.KOVAN]: \"0xd0A1E359811322d97991E03f863a0C30C2cF029C\",\n  [ChainId.ARBITRUM]: \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\",\n  [ChainId.ARBITRUM_TESTNET]: \"0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b\",\n  [ChainId.BSC]: \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\",\n  [ChainId.FANTOM]: \"0x74b23882a30290451A17c44f4F05243b6b58C76d\",\n  [ChainId.MATIC]: \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\",\n  [ChainId.OKEX]: \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\",\n  [ChainId.HECO]: \"0x64FF637fB478863B7468bc97D30a5bF3A428a1fD\",\n  [ChainId.HARMONY]: \"0x6983D1E6DEf3690C4d616b13597A09e6193EA013\",\n  [ChainId.XDAI]: \"0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1\",\n  [ChainId.AVALANCHE]: \"0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15\"\n};\n\nexport const WNATIVE_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: WETH9_ADDRESS[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n  [ChainId.FANTOM]: \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\",\n  [ChainId.FANTOM_TESTNET]: \"0xf1277d1Ed8AD466beddF92ef448A132661956621\",\n  [ChainId.MATIC]: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n  [ChainId.MATIC_TESTNET]: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n  [ChainId.XDAI]: \"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d\",\n  [ChainId.BSC]: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n  [ChainId.BSC_TESTNET]: \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\",\n  [ChainId.MOONBEAM_TESTNET]: \"0xe73763DB808ecCDC0E36bC8E32510ED126910394\",\n  [ChainId.AVALANCHE]: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n  [ChainId.AVALANCHE_TESTNET]: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n  [ChainId.HECO]: \"0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F\",\n  [ChainId.HECO_TESTNET]: \"0x5B2DA6F42CA09C77D577a12BeaD0446148830687\",\n  [ChainId.HARMONY]: \"0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a\",\n  [ChainId.HARMONY_TESTNET]: \"0x7a2afac38517d512E55C0bCe3b6805c10a04D60F\",\n  [ChainId.OKEX]: \"0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15\",\n  [ChainId.OKEX_TESTNET]: \"0x2219845942d28716c0F7C605765fABDcA1a7d9E0\",\n  [ChainId.CELO]: \"0x471EcE3750Da237f93B8E339c536989b8978a438\",\n  [ChainId.PALM]: \"0xF98cABF0a963452C5536330408B2590567611a71\"\n};\n\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\"\n};\n\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  [ChainId.GÖRLI]: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  [ChainId.ROPSTEN]: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n  [ChainId.RINKEBY]: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\"\n};\n\nexport const ZAPPER_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"\",\n  [ChainId.ROPSTEN]: \"\"\n};\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982\",\n  [ChainId.ROPSTEN]: \"0x84d1f7202e0e7dac211617017ca72a2cb5e2b955\"\n};\n\nexport const MULTICALL2_ADDRESS: AddressMap = {\n  [ChainId.MAINNET]: \"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696\",\n  [ChainId.ROPSTEN]: \"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696\",\n  [ChainId.RINKEBY]: \"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696\",\n  [ChainId.GÖRLI]: \"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696\",\n  [ChainId.KOVAN]: \"0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696\",\n  [ChainId.ARBITRUM]: \"0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB\",\n  [ChainId.ARBITRUM_TESTNET]: \"0xa501c031958F579dB7676fF1CE78AD305794d579\",\n  [ChainId.CELO]: \"0x9aac9048fC8139667D6a2597B902865bfdc225d3\",\n  [ChainId.FANTOM]: \"0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5\",\n  [ChainId.FANTOM_TESTNET]: \"\",\n  [ChainId.MATIC]: \"0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD\",\n  [ChainId.MATIC_TESTNET]: \"\",\n  [ChainId.XDAI]: \"0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287\",\n  [ChainId.BSC]: \"0xa9193376D09C7f31283C54e56D013fCF370Cd9D9\",\n  [ChainId.BSC_TESTNET]: \"\",\n  [ChainId.MOONBEAM_TESTNET]: \"\",\n  [ChainId.AVALANCHE]: \"0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3\",\n  [ChainId.AVALANCHE_TESTNET]: \"\",\n  [ChainId.HECO]: \"0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3\",\n  [ChainId.HECO_TESTNET]: \"\",\n  [ChainId.HARMONY]: \"0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3\",\n  [ChainId.HARMONY_TESTNET]: \"\",\n  [ChainId.OKEX]: \"0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3\",\n  [ChainId.OKEX_TESTNET]: \"\",\n  [ChainId.PALM]: \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\"\n};\n","import { Currency } from \"./Currency\";\nimport { Token } from \"./Token\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class AbstractCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean;\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean;\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number;\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number;\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string;\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string;\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(\n    chainId: number,\n    decimals: number,\n    symbol?: string,\n    name?: string\n  ) {\n    invariant(Number.isSafeInteger(chainId), \"CHAIN_ID\");\n    invariant(\n      decimals >= 0 && decimals < 255 && Number.isInteger(decimals),\n      \"DECIMALS\"\n    );\n\n    this.chainId = chainId;\n    this.decimals = decimals;\n    this.symbol = symbol;\n    this.name = name;\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean;\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token;\n}\n","import { AbstractCurrency } from \"./AbstractCurrency\";\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends AbstractCurrency {\n  public readonly isNative: true = true;\n  public readonly isToken: false = false;\n}\n","import { getAddress } from \"@ethersproject/address\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address);\n    warning(address === checksummedAddress, `${address} is not checksummed.`);\n    return checksummedAddress;\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`);\n  }\n}\n","import { AbstractCurrency } from \"./AbstractCurrency\";\nimport { ChainId } from \"../enums\";\nimport { Currency } from \"./Currency\";\nimport invariant from \"tiny-invariant\";\nimport { validateAndParseAddress } from \"../functions/validateAndParseAddress\";\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends AbstractCurrency {\n  public readonly chainId: ChainId;\n  public readonly address: string;\n\n  public readonly isNative: false = false;\n  public readonly isToken: true = true;\n\n  public constructor(\n    chainId: ChainId,\n    address: string,\n    decimals: number,\n    symbol?: string,\n    name?: string\n  ) {\n    super(chainId, decimals, symbol, name);\n    this.chainId = chainId;\n    this.address = validateAndParseAddress(address);\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return (\n      other.isToken &&\n      this.chainId === other.chainId &&\n      this.address === other.address\n    );\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, \"CHAIN_IDS\");\n    invariant(this.address !== other.address, \"ADDRESSES\");\n    return this.address.toLowerCase() < other.address.toLowerCase();\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this;\n  }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(\n  currencyA: Currency,\n  currencyB: Currency\n): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB);\n  } else if (currencyA instanceof Token) {\n    return false;\n  } else if (currencyB instanceof Token) {\n    return false;\n  } else {\n    return currencyA === currencyB;\n  }\n}\n","import { WETH9_ADDRESS, WNATIVE_ADDRESS } from \"./addresses\";\n\nimport { ChainId } from \"../enums\";\nimport { Token } from \"../entities/Token\";\n\nexport const WETH9: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: new Token(\n    ChainId.MAINNET,\n    WETH9_ADDRESS[ChainId.MAINNET],\n    18,\n    \"WETH9\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.ROPSTEN]: new Token(\n    ChainId.ROPSTEN,\n    WETH9_ADDRESS[ChainId.ROPSTEN],\n    18,\n    \"WETH9\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.RINKEBY]: new Token(\n    ChainId.RINKEBY,\n    WETH9_ADDRESS[ChainId.RINKEBY],\n    18,\n    \"WETH9\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.GÖRLI]: new Token(\n    ChainId.GÖRLI,\n    WETH9_ADDRESS[ChainId.GÖRLI],\n    18,\n    \"WETH9\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.KOVAN]: new Token(\n    ChainId.KOVAN,\n    WETH9_ADDRESS[ChainId.KOVAN],\n    18,\n    \"WETH9\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.ARBITRUM]: new Token(\n    ChainId.ARBITRUM,\n    WETH9_ADDRESS[ChainId.ARBITRUM],\n    18,\n    \"WETH9\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.ARBITRUM_TESTNET]: new Token(\n    ChainId.ARBITRUM_TESTNET,\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.BSC]: new Token(\n    ChainId.BSC,\n    WETH9_ADDRESS[ChainId.BSC],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.FANTOM]: new Token(\n    ChainId.FANTOM,\n    WETH9_ADDRESS[ChainId.FANTOM],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.MATIC]: new Token(\n    ChainId.MATIC,\n    WETH9_ADDRESS[ChainId.MATIC],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.OKEX]: new Token(\n    ChainId.OKEX,\n    WETH9_ADDRESS[ChainId.OKEX],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.HECO]: new Token(\n    ChainId.HECO,\n    WETH9_ADDRESS[ChainId.HECO],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.HARMONY]: new Token(\n    ChainId.HARMONY,\n    WETH9_ADDRESS[ChainId.HARMONY],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.XDAI]: new Token(\n    ChainId.XDAI,\n    WETH9_ADDRESS[ChainId.XDAI],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n\n  [ChainId.AVALANCHE]: new Token(\n    ChainId.AVALANCHE,\n    WETH9_ADDRESS[ChainId.AVALANCHE],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  )\n};\n\nexport const WNATIVE: { [chainId: number]: Token } = {\n  [ChainId.MAINNET]: WETH9[ChainId.MAINNET],\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\n  [ChainId.FANTOM]: new Token(\n    ChainId.FANTOM,\n    WNATIVE_ADDRESS[ChainId.FANTOM],\n    18,\n    \"WFTM\",\n    \"Wrapped FTM\"\n  ),\n  [ChainId.FANTOM_TESTNET]: new Token(\n    ChainId.FANTOM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\n    18,\n    \"FTM\",\n    \"Wrapped FTM\"\n  ),\n  [ChainId.MATIC]: new Token(\n    ChainId.MATIC,\n    WNATIVE_ADDRESS[ChainId.MATIC],\n    18,\n    \"WMATIC\",\n    \"Wrapped Matic\"\n  ),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\n    18,\n    \"WMATIC\",\n    \"Wrapped Matic\"\n  ),\n  [ChainId.XDAI]: new Token(\n    ChainId.XDAI,\n    WNATIVE_ADDRESS[ChainId.XDAI],\n    18,\n    \"WXDAI\",\n    \"Wrapped xDai\"\n  ),\n  [ChainId.BSC]: new Token(\n    ChainId.BSC,\n    WNATIVE_ADDRESS[ChainId.BSC],\n    18,\n    \"WBNB\",\n    \"Wrapped BNB\"\n  ),\n  [ChainId.BSC_TESTNET]: new Token(\n    ChainId.BSC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\n    18,\n    \"WBNB\",\n    \"Wrapped BNB\"\n  ),\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\n  [ChainId.MOONBEAM_TESTNET]: new Token(\n    ChainId.MOONBEAM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\n    18,\n    \"WETH\",\n    \"Wrapped Ether\"\n  ),\n  [ChainId.AVALANCHE]: new Token(\n    ChainId.AVALANCHE,\n    WNATIVE_ADDRESS[ChainId.AVALANCHE],\n    18,\n    \"WAVAX\",\n    \"Wrapped AVAX\"\n  ),\n  [ChainId.AVALANCHE_TESTNET]: new Token(\n    ChainId.AVALANCHE_TESTNET,\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\n    18,\n    \"WAVAX\",\n    \"Wrapped AVAX\"\n  ),\n  [ChainId.HECO]: new Token(\n    ChainId.HECO,\n    WNATIVE_ADDRESS[ChainId.HECO],\n    18,\n    \"WHT\",\n    \"Wrapped HT\"\n  ),\n  [ChainId.HECO_TESTNET]: new Token(\n    ChainId.HECO_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\n    18,\n    \"WHT\",\n    \"Wrapped HT\"\n  ),\n  [ChainId.HARMONY]: new Token(\n    ChainId.HARMONY,\n    WNATIVE_ADDRESS[ChainId.HARMONY],\n    18,\n    \"WONE\",\n    \"Wrapped ONE\"\n  ),\n  [ChainId.HARMONY_TESTNET]: new Token(\n    ChainId.HARMONY_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\n    18,\n    \"WONE\",\n    \"Wrapped ONE\"\n  ),\n  [ChainId.OKEX]: new Token(\n    ChainId.OKEX,\n    WNATIVE_ADDRESS[ChainId.OKEX],\n    18,\n    \"WOKT\",\n    \"Wrapped OKExChain\"\n  ),\n  [ChainId.OKEX_TESTNET]: new Token(\n    ChainId.OKEX_TESTNET,\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\n    18,\n    \"WOKT\",\n    \"Wrapped OKExChain\"\n  ),\n  [ChainId.CELO]: new Token(\n    ChainId.CELO,\n    WNATIVE_ADDRESS[ChainId.CELO],\n    18,\n    \"CELO\",\n    \"Celo\"\n  ),\n  [ChainId.PALM]: new Token(\n    ChainId.PALM,\n    WNATIVE_ADDRESS[ChainId.PALM],\n    18,\n    \"WPALM\",\n    \"Wrapped Palm\"\n  )\n};\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Avalanche extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"AVAX\", \"Avalanche\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Avalanche } = {};\n\n  public static onChain(chainId: number): Avalanche {\n    return (\n      this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\n    );\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Binance extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"BNB\", \"Binance Coin\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Binance } = {};\n\n  public static onChain(chainId: number): Binance {\n    return (\n      this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\n    );\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Celo extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"CELO\", \"Celo\");\n  }\n\n  public get wrapped(): Token {\n    const wcelo = WNATIVE[this.chainId];\n    invariant(!!wcelo, \"WRAPPED\");\n    return wcelo;\n  }\n\n  private static _cache: { [chainId: number]: Celo } = {};\n\n  public static onChain(chainId: number): Celo {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WETH9 } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"ETH\", \"Ether\");\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId];\n    invariant(!!weth9, \"WRAPPED\");\n    return weth9;\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {};\n\n  public static onChain(chainId: number): Ether {\n    return (\n      this._etherCache[chainId] ??\n      (this._etherCache[chainId] = new Ether(chainId))\n    );\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Fantom extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"FTM\", \"Fantom\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Fantom } = {};\n\n  public static onChain(chainId: number): Fantom {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Harmony extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"ONE\", \"Harmony\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Harmony } = {};\n\n  public static onChain(chainId: number): Harmony {\n    return (\n      this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\n    );\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Heco extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"HT\", \"Huobi Token\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Heco } = {};\n\n  public static onChain(chainId: number): Heco {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Matic extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"MATIC\", \"Matic\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Matic } = {};\n\n  public static onChain(chainId: number): Matic {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Okex extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"OKT\", \"OKExChain\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Okex } = {};\n\n  public static onChain(chainId: number): Okex {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class xDai extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"XDAI\", \"xDai\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: xDai } = {};\n\n  public static onChain(chainId: number): xDai {\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import { Currency } from \"../Currency\";\nimport { NativeCurrency } from \"../NativeCurrency\";\nimport { Token } from \"../Token\";\nimport { WNATIVE } from \"../../constants/tokens\";\nimport invariant from \"tiny-invariant\";\n\nexport class Palm extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, \"PALM\", \"Palm\");\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId];\n    invariant(!!wnative, \"WRAPPED\");\n    return wnative;\n  }\n\n  private static _cache: { [chainId: number]: Palm } = {};\n\n  public static onChain(chainId: number): Palm {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId));\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId;\n  }\n}\n","import {\n  Avalanche,\n  Binance,\n  Celo,\n  Ether,\n  Fantom,\n  Harmony,\n  Heco,\n  Matic,\n  Okex,\n  Palm,\n  xDai\n} from \"../entities/Native\";\n\nimport { ChainId } from \"../enums\";\n\nexport const NATIVE = {\n  [ChainId.MAINNET]: Ether.onChain(ChainId.MAINNET),\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM)\n};\n","import JSBI from \"jsbi\";\n\nexport const MaxUint256 = JSBI.BigInt(\n  \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"\n);\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0);\nexport const ONE = JSBI.BigInt(1);\nexport const TWO = JSBI.BigInt(2);\nexport const THREE = JSBI.BigInt(3);\nexport const FIVE = JSBI.BigInt(5);\nexport const TEN = JSBI.BigInt(10);\nexport const _100 = JSBI.BigInt(100);\nexport const _997 = JSBI.BigInt(997);\nexport const _1000 = JSBI.BigInt(1000);\nexport const _960 = JSBI.BigInt(960)\nexport const _980 = JSBI.BigInt(980)\n","import JSBI from \"jsbi\";\n\nexport * from \"./addresses\";\nexport * from \"./natives\";\nexport * from \"./tokens\";\nexport * from \"./numbers\";\n\nexport const INIT_CODE_HASH: string =\n  \"0x7edb55532c9a5d7bdedb5a640ae4ff9929cdaa8d48365bed84375c624a3726ca\";\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000);\n\nexport enum SolidityType {\n  uint8 = \"uint8\",\n  uint256 = \"uint256\"\n}\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt(\"0xff\"),\n  [SolidityType.uint256]: JSBI.BigInt(\n    \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"\n  )\n};\n\nexport const LAMBDA_URL =\n  \"https://9epjsvomc4.execute-api.us-east-1.amazonaws.com/dev\";\n\nexport const SOCKET_URL =\n  \"wss://hfimt374ge.execute-api.us-east-1.amazonaws.com/dev\";\n","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = \"setPrototypeOf\" in Object;\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true;\n\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true;\n\n  public constructor() {\n    super();\n    this.name = this.constructor.name;\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype);\n  }\n}\n","import _Big, { RoundingMode } from \"big.js\";\n\nimport { BigintIsh } from \"../types\";\nimport JSBI from \"jsbi\";\nimport { Rounding } from \"../enums\";\nimport _Decimal from \"decimal.js-light\";\nimport invariant from \"tiny-invariant\";\nimport toFormat from \"toformat\";\n\nconst Decimal = toFormat(_Decimal);\nconst Big = toFormat(_Big);\n\nBig.strict = true;\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\n};\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\n};\n\nexport class Fraction {\n  public readonly numerator: JSBI;\n  public readonly denominator: JSBI;\n\n  public constructor(\n    numerator: BigintIsh,\n    denominator: BigintIsh = JSBI.BigInt(1)\n  ) {\n    this.numerator = JSBI.BigInt(numerator);\n    this.denominator = JSBI.BigInt(denominator);\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (\n      fractionish instanceof JSBI ||\n      typeof fractionish === \"number\" ||\n      typeof fractionish === \"string\"\n    )\n      return new Fraction(fractionish);\n\n    if (\"numerator\" in fractionish && \"denominator\" in fractionish)\n      return fractionish;\n    throw new Error(\"Could not parse fraction\");\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator);\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(\n      JSBI.remainder(this.numerator, this.denominator),\n      this.denominator\n    );\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator);\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other);\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(\n        JSBI.add(this.numerator, otherParsed.numerator),\n        this.denominator\n      );\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other);\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(\n        JSBI.subtract(this.numerator, otherParsed.numerator),\n        this.denominator\n      );\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    );\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    );\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other);\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    );\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(\n      Number.isInteger(significantDigits),\n      `${significantDigits} is not an integer.`\n    );\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`);\n\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding]\n    });\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits);\n    return quotient.toFormat(quotient.decimalPlaces(), format);\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: \"\" },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(\n      Number.isInteger(decimalPlaces),\n      `${decimalPlaces} is not an integer.`\n    );\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`);\n\n    Big.DP = decimalPlaces;\n    Big.RM = toFixedRounding[rounding];\n    return new Big(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toFormat(decimalPlaces, format);\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator);\n  }\n}\n","import { BigintIsh } from \"../types\";\nimport { Currency } from \"./Currency\";\nimport { Fraction } from \"./Fraction\";\nimport JSBI from \"jsbi\";\nimport { MaxUint256 } from \"../constants\";\nimport { Rounding } from \"../enums\";\nimport { Token } from \"./Token\";\nimport _Big from \"big.js\";\nimport invariant from \"tiny-invariant\";\nimport toFormat from \"toformat\";\n\nconst Big = toFormat(_Big);\n\nBig.strict = true;\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T;\n  public readonly decimalScale: JSBI;\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(\n    currency: T,\n    rawAmount: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount);\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator);\n  }\n\n  protected constructor(\n    currency: T,\n    numerator: BigintIsh,\n    denominator?: BigintIsh\n  ) {\n    super(numerator, denominator);\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), \"AMOUNT\");\n    this.currency = currency;\n    this.decimalScale = JSBI.exponentiate(\n      JSBI.BigInt(10),\n      JSBI.BigInt(currency.decimals)\n    );\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), \"CURRENCY\");\n    const added = super.add(other);\n    return CurrencyAmount.fromFractionalAmount(\n      this.currency,\n      added.numerator,\n      added.denominator\n    );\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), \"CURRENCY\");\n    const subtracted = super.subtract(other);\n    return CurrencyAmount.fromFractionalAmount(\n      this.currency,\n      subtracted.numerator,\n      subtracted.denominator\n    );\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other);\n    return CurrencyAmount.fromFractionalAmount(\n      this.currency,\n      multiplied.numerator,\n      multiplied.denominator\n    );\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other);\n    return CurrencyAmount.fromFractionalAmount(\n      this.currency,\n      divided.numerator,\n      divided.denominator\n    );\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super\n      .divide(this.decimalScale)\n      .toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, \"DECIMALS\");\n    return super\n      .divide(this.decimalScale)\n      .toFixed(decimalPlaces, format, rounding);\n  }\n\n  public toExact(format: object = { groupSeparator: \"\" }): string {\n    Big.DP = this.currency.decimals;\n    return new Big(this.quotient.toString())\n      .div(this.decimalScale.toString())\n      .toFormat(format);\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>;\n    return CurrencyAmount.fromFractionalAmount(\n      this.currency.wrapped,\n      this.numerator,\n      this.denominator\n    );\n  }\n}\n","import { BigintIsh } from \"../types\";\nimport { Currency } from \"./Currency\";\nimport { CurrencyAmount } from \"./CurrencyAmount\";\nimport { Fraction } from \"./Fraction\";\nimport JSBI from \"jsbi\";\nimport { Rounding } from \"../enums\";\nimport invariant from \"tiny-invariant\";\n\nexport class Price<\n  TBase extends Currency,\n  TQuote extends Currency\n> extends Fraction {\n  public readonly baseCurrency: TBase; // input i.e. denominator\n  public readonly quoteCurrency: TQuote; // output i.e. numerator\n  public readonly scalar: Fraction; // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [\n          {\n            baseAmount: CurrencyAmount<TBase>;\n            quoteAmount: CurrencyAmount<TQuote>;\n          }\n        ]\n  ) {\n    let baseCurrency: TBase,\n      quoteCurrency: TQuote,\n      denominator: BigintIsh,\n      numerator: BigintIsh;\n\n    if (args.length === 4) {\n      [baseCurrency, quoteCurrency, denominator, numerator] = args;\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount);\n      [baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator\n      ];\n    }\n    super(numerator, denominator);\n\n    this.baseCurrency = baseCurrency;\n    this.quoteCurrency = quoteCurrency;\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    );\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(\n      this.quoteCurrency,\n      this.baseCurrency,\n      this.numerator,\n      this.denominator\n    );\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(\n    other: Price<TQuote, TOtherQuote>\n  ): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), \"TOKEN\");\n    const fraction = super.multiply(other);\n    return new Price(\n      this.baseCurrency,\n      other.quoteCurrency,\n      fraction.denominator,\n      fraction.numerator\n    );\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), \"TOKEN\");\n    const result = super.multiply(currencyAmount);\n    return CurrencyAmount.fromFractionalAmount(\n      this.quoteCurrency,\n      result.numerator,\n      result.denominator\n    );\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar);\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding?: Rounding\n  ): string {\n    return this.adjustedForDecimals.toSignificant(\n      significantDigits,\n      format,\n      rounding\n    );\n  }\n\n  public toFixed(\n    decimalPlaces: number = 4,\n    format?: object,\n    rounding?: Rounding\n  ): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { keccak256, pack } from \"@ethersproject/solidity\";\n\nimport { INIT_CODE_HASH } from \"../constants\";\n// import { Percent } from 'entities'\nimport { Token } from \"../entities/Token\";\nimport { getCreate2Address } from \"@ethersproject/address\";\n\nexport const computePairAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB\n}: {\n  factoryAddress: string;\n  tokenA: Token;\n  tokenB: Token;\n}): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB)\n    ? [tokenA, tokenB]\n    : [tokenB, tokenA]; // does safety checks\n\n  return getCreate2Address(\n    factoryAddress,\n    keccak256(\n      [\"bytes\"],\n      [pack([\"address\", \"address\"], [token0.address, token1.address])]\n    ),\n    INIT_CODE_HASH\n  );\n};\n\nexport enum FeeAmount {\n  LOW = 500,\n  MEDIUM = 3000,\n  HIGH = 10000\n}\n\nconst CONSTANT_PRODUCT_POOL_CREATION_CODE = \"\";\n\nexport const computeConstantProductPoolAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB,\n  fee\n}: {\n  factoryAddress: string;\n  tokenA: Token;\n  tokenB: Token;\n  fee: FeeAmount;\n}): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB)\n    ? [tokenA, tokenB]\n    : [tokenB, tokenA]; // does safety checks\n  return getCreate2Address(\n    factoryAddress,\n    keccak256(\n      [\"bytes\"],\n      [\n        pack(\n          [\"address\", \"address\", \"uint24\"],\n          [token0.address, token1.address, fee]\n        )\n      ]\n    ),\n    CONSTANT_PRODUCT_POOL_CREATION_CODE\n  );\n};\n\n// const CONCENTRATED_LIQUIDITY_POOL_CREATION_CODE = ''\n\n// export const computeConcentratedLiquidityPoolAddress = ({\n//   factoryAddress,\n//   tokenA,\n//   tokenB,\n//   fee,\n// }: {\n//   factoryAddress: string\n//   tokenA: Token\n//   tokenB: Token\n//   fee: FeeAmount\n// }): string => {\n//   const [token0, token1] = tokenA.sortsBefore(tokenB)\n//     ? [tokenA, tokenB]\n//     : [tokenB, tokenA] // does safety checks\n//   return getCreate2Address(\n//     factoryAddress,\n//     keccak256(\n//       ['bytes'],\n//       [\n//         pack(\n//           ['address', 'address', 'uint24'],\n//           [token0.address, token1.address, fee]\n//         ),\n//       ]\n//     ),\n//     CONSTANT_PRODUCT_POOL_CREATION_CODE\n//   )\n// }\n","import JSBI from \"jsbi\";\nimport invariant from \"tiny-invariant\";\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER);\n\nconst ZERO = JSBI.BigInt(0);\nconst ONE = JSBI.BigInt(1);\nconst TWO = JSBI.BigInt(2);\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), \"NEGATIVE\");\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))));\n  }\n\n  let z: JSBI;\n  let x: JSBI;\n  z = value;\n  x = JSBI.add(JSBI.divide(value, TWO), ONE);\n  while (JSBI.lessThan(x, z)) {\n    z = x;\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO);\n  }\n  return z;\n}\n","import {\n  FACTORY_ADDRESS,\n  FIVE,\n  MINIMUM_LIQUIDITY,\n  ONE,\n  ZERO,\n  _1000,\n  _997\n} from \"../constants\";\nimport {\n  InsufficientInputAmountError,\n  InsufficientReservesError\n} from \"../errors\";\n\nimport { BigintIsh } from \"../types\";\nimport { CurrencyAmount } from \"./CurrencyAmount\";\nimport JSBI from \"jsbi\";\nimport { Price } from \"./Price\";\nimport { Token } from \"./Token\";\nimport { computePairAddress } from \"../functions/computePairAddress\";\nimport invariant from \"tiny-invariant\";\nimport { sqrt } from \"../functions/sqrt\";\n\nexport class Pair {\n  public readonly liquidityToken: Token;\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>];\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    return computePairAddress({\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n      tokenA,\n      tokenB\n    });\n  }\n\n  public constructor(\n    currencyAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ) {\n    const tokenAmounts = currencyAmountA.currency.sortsBefore(\n      tokenAmountB.currency\n    ) // does safety checks\n      ? [currencyAmountA, tokenAmountB]\n      : [tokenAmountB, currencyAmountA];\n    this.liquidityToken = new Token(\n      tokenAmounts[0].currency.chainId,\n      Pair.getAddress(tokenAmounts[0].currency, tokenAmounts[1].currency),\n      18,\n      \"UNI-V2\",\n      \"Uniswap V2\"\n    );\n    this.tokenAmounts = tokenAmounts as [\n      CurrencyAmount<Token>,\n      CurrencyAmount<Token>\n    ];\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1);\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0]);\n    return new Price(\n      this.token0,\n      this.token1,\n      result.denominator,\n      result.numerator\n    );\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1]);\n    return new Price(\n      this.token1,\n      this.token0,\n      result.denominator,\n      result.numerator\n    );\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price<Token, Token> {\n    invariant(this.involvesToken(token), \"TOKEN\");\n    return token.equals(this.token0) ? this.token0Price : this.token1Price;\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): number {\n    return this.token0.chainId;\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].currency;\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].currency;\n  }\n\n  public get reserve0(): CurrencyAmount<Token> {\n    return this.tokenAmounts[0];\n  }\n\n  public get reserve1(): CurrencyAmount<Token> {\n    return this.tokenAmounts[1];\n  }\n\n  public reserveOf(token: Token): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), \"TOKEN\");\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1;\n  }\n\n  public getOutputAmount(\n    inputAmount: CurrencyAmount<Token>\n  ): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(inputAmount.currency), \"TOKEN\");\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO)\n    ) {\n      throw new InsufficientReservesError();\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency);\n    const outputReserve = this.reserveOf(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0\n    );\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997);\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient);\n    const denominator = JSBI.add(\n      JSBI.multiply(inputReserve.quotient, _1000),\n      inputAmountWithFee\n    );\n    const outputAmount = CurrencyAmount.fromRawAmount(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    );\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\n      throw new InsufficientInputAmountError();\n    }\n    return [\n      outputAmount,\n      new Pair(\n        inputReserve.add(inputAmount),\n        outputReserve.subtract(outputAmount)\n      )\n    ];\n  }\n\n  public getInputAmount(\n    outputAmount: CurrencyAmount<Token>\n  ): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(outputAmount.currency), \"TOKEN\");\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\n      JSBI.greaterThanOrEqual(\n        outputAmount.quotient,\n        this.reserveOf(outputAmount.currency).quotient\n      )\n    ) {\n      throw new InsufficientReservesError();\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.currency);\n    const inputReserve = this.reserveOf(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0\n    );\n    const numerator = JSBI.multiply(\n      JSBI.multiply(inputReserve.quotient, outputAmount.quotient),\n      _1000\n    );\n    const denominator = JSBI.multiply(\n      JSBI.subtract(outputReserve.quotient, outputAmount.quotient),\n      _997\n    );\n    const inputAmount = CurrencyAmount.fromRawAmount(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    );\n    return [\n      inputAmount,\n      new Pair(\n        inputReserve.add(inputAmount),\n        outputReserve.subtract(outputAmount)\n      )\n    ];\n  }\n\n  public getLiquidityMinted(\n    totalSupply: CurrencyAmount<Token>,\n    tokenAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ): CurrencyAmount<Token> {\n    invariant(totalSupply.currency.equals(this.liquidityToken), \"LIQUIDITY\");\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(\n      tokenAmountB.currency\n    ) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA];\n    invariant(\n      tokenAmounts[0].currency.equals(this.token0) &&\n        tokenAmounts[1].currency.equals(this.token1),\n      \"TOKEN\"\n    );\n\n    let liquidity: JSBI;\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\n      liquidity = JSBI.subtract(\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n        MINIMUM_LIQUIDITY\n      );\n    } else {\n      const amount0 = JSBI.divide(\n        JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient),\n        this.reserve0.quotient\n      );\n      const amount1 = JSBI.divide(\n        JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient),\n        this.reserve1.quotient\n      );\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1;\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError();\n    }\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity);\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: CurrencyAmount<Token>,\n    liquidity: CurrencyAmount<Token>,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), \"TOKEN\");\n    invariant(totalSupply.currency.equals(this.liquidityToken), \"TOTAL_SUPPLY\");\n    invariant(liquidity.currency.equals(this.liquidityToken), \"LIQUIDITY\");\n    invariant(\n      JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient),\n      \"LIQUIDITY\"\n    );\n\n    let totalSupplyAdjusted: CurrencyAmount<Token>;\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply;\n    } else {\n      invariant(!!kLast, \"K_LAST\");\n      const kLastParsed = JSBI.BigInt(kLast);\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(\n          JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient)\n        );\n        const rootKLast = sqrt(kLastParsed);\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(\n            totalSupply.quotient,\n            JSBI.subtract(rootK, rootKLast)\n          );\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast);\n          const feeLiquidity = JSBI.divide(numerator, denominator);\n          totalSupplyAdjusted = totalSupply.add(\n            CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity)\n          );\n        } else {\n          totalSupplyAdjusted = totalSupply;\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply;\n      }\n    }\n\n    return CurrencyAmount.fromRawAmount(\n      token,\n      JSBI.divide(\n        JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient),\n        totalSupplyAdjusted.quotient\n      )\n    );\n  }\n}\n","import { BigintIsh } from \"../types\";\nimport { Fraction } from \"./Fraction\";\nimport JSBI from \"jsbi\";\nimport { Rounding } from \"../enums\";\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100));\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator);\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true;\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other));\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other));\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other));\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other));\n  }\n\n  public toSignificant(\n    significantDigits: number = 5,\n    format?: object,\n    rounding?: Rounding\n  ): string {\n    return super\n      .multiply(ONE_HUNDRED)\n      .toSignificant(significantDigits, format, rounding);\n  }\n\n  public toFixed(\n    decimalPlaces: number = 2,\n    format?: object,\n    rounding?: Rounding\n  ): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding);\n  }\n}\n","import { Currency } from \"./Currency\";\nimport { Pair } from \"./Pair\";\nimport { Price } from \"./Price\";\nimport { Token } from \"./Token\";\nimport invariant from \"tiny-invariant\";\n\nexport class Route<TInput extends Currency, TOutput extends Currency> {\n  public readonly pairs: Pair[];\n  public readonly path: Token[];\n  public readonly input: TInput;\n  public readonly output: TOutput;\n\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\n    invariant(pairs.length > 0, \"PAIRS\");\n    const chainId: number = pairs[0].chainId;\n    invariant(\n      pairs.every(pair => pair.chainId === chainId),\n      \"CHAIN_IDS\"\n    );\n\n    const wrappedInput = input.wrapped;\n    invariant(pairs[0].involvesToken(wrappedInput), \"INPUT\");\n    invariant(\n      typeof output === \"undefined\" ||\n        pairs[pairs.length - 1].involvesToken(output.wrapped),\n      \"OUTPUT\"\n    );\n\n    const path: Token[] = [wrappedInput];\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i];\n      invariant(\n        currentInput.equals(pair.token0) || currentInput.equals(pair.token1),\n        \"PATH\"\n      );\n      const output = currentInput.equals(pair.token0)\n        ? pair.token1\n        : pair.token0;\n      path.push(output);\n    }\n\n    this.pairs = pairs;\n    this.path = path;\n    this.input = input;\n    this.output = output;\n  }\n\n  private _midPrice: Price<TInput, TOutput> | null = null;\n\n  public get midPrice(): Price<TInput, TOutput> {\n    if (this._midPrice !== null) return this._midPrice;\n    const prices: Price<Currency, Currency>[] = [];\n    for (const [i, pair] of this.pairs.entries()) {\n      prices.push(\n        this.path[i].equals(pair.token0)\n          ? new Price(\n              pair.reserve0.currency,\n              pair.reserve1.currency,\n              pair.reserve0.quotient,\n              pair.reserve1.quotient\n            )\n          : new Price(\n              pair.reserve1.currency,\n              pair.reserve0.currency,\n              pair.reserve1.quotient,\n              pair.reserve0.quotient\n            )\n      );\n    }\n    const reduced = prices\n      .slice(1)\n      .reduce(\n        (accumulator, currentValue) => accumulator.multiply(currentValue),\n        prices[0]\n      );\n    return (this._midPrice = new Price(\n      this.input,\n      this.output,\n      reduced.denominator,\n      reduced.numerator\n    ));\n  }\n\n  public get chainId(): number {\n    return this.pairs[0].chainId;\n  }\n}\n","import { Currency } from \"../entities/Currency\";\nimport { CurrencyAmount } from \"../entities/CurrencyAmount\";\nimport { Percent } from \"../entities/Percent\";\nimport { Price } from \"../entities/Price\";\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<\n  TBase extends Currency,\n  TQuote extends Currency\n>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount);\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount\n    .subtract(outputAmount)\n    .divide(quotedOutputAmount);\n  return new Percent(priceImpact.numerator, priceImpact.denominator);\n}\n","import invariant from \"tiny-invariant\";\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(\n  items: T[],\n  add: T,\n  maxSize: number,\n  comparator: (a: T, b: T) => number\n): T | null {\n  invariant(maxSize > 0, \"MAX_SIZE_ZERO\");\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, \"ITEMS_SIZE\");\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add);\n    return null;\n  } else {\n    const isFull = items.length === maxSize;\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add;\n    }\n\n    let lo = 0,\n      hi = items.length;\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1;\n      } else {\n        hi = mid;\n      }\n    }\n    items.splice(lo, 0, add);\n    return isFull ? items.pop()! : null;\n  }\n}\n","import { ONE, ZERO } from \"../constants\";\n\nimport { Currency } from \"./Currency\";\nimport { CurrencyAmount } from \"./CurrencyAmount\";\nimport { Fraction } from \"./Fraction\";\nimport { Pair } from \"./Pair\";\nimport { Percent } from \"./Percent\";\nimport { Price } from \"./Price\";\nimport { Route } from \"./Route\";\nimport { Token } from \"./Token\";\nimport { TradeType } from \"../enums\";\nimport { computePriceImpact } from \"../functions/computePriceImpact\";\nimport invariant from \"tiny-invariant\";\nimport { sortedInsert } from \"../functions/sortedInsert\";\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\n  readonly inputAmount: CurrencyAmount<TInput>;\n  readonly outputAmount: CurrencyAmount<TOutput>;\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator<\n  TInput extends Currency,\n  TOutput extends Currency\n>(a: InputOutput<TInput, TOutput>, b: InputOutput<TInput, TOutput>): number {\n  // must have same input and output token for comparison\n  invariant(\n    a.inputAmount.currency.equals(b.inputAmount.currency),\n    \"INPUT_CURRENCY\"\n  );\n  invariant(\n    a.outputAmount.currency.equals(b.outputAmount.currency),\n    \"OUTPUT_CURRENCY\"\n  );\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0;\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1;\n    } else {\n      return 1;\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator<\n  TInput extends Currency,\n  TOutput extends Currency,\n  TTradeType extends TradeType\n>(\n  a: Trade<TInput, TOutput, TTradeType>,\n  b: Trade<TInput, TOutput, TTradeType>\n) {\n  const ioComp = inputOutputComparator(a, b);\n  if (ioComp !== 0) {\n    return ioComp;\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1;\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1;\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length;\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number;\n  // the maximum number of hops a trade should contain\n  maxHops?: number;\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade<\n  TInput extends Currency,\n  TOutput extends Currency,\n  TTradeType extends TradeType\n> {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\n   */\n  public readonly route: Route<TInput, TOutput>;\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TTradeType;\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount<TInput>;\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount<TOutput>;\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price<TInput, TOutput>;\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent;\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountIn: CurrencyAmount<TInput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT);\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountOut: CurrencyAmount<TOutput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT);\n  }\n\n  public constructor(\n    route: Route<TInput, TOutput>,\n    amount: TTradeType extends TradeType.EXACT_INPUT\n      ? CurrencyAmount<TInput>\n      : CurrencyAmount<TOutput>,\n    tradeType: TTradeType\n  ) {\n    this.route = route;\n    this.tradeType = tradeType;\n\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length);\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(amount.currency.equals(route.input), \"INPUT\");\n      tokenAmounts[0] = amount.wrapped;\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i];\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i]);\n        tokenAmounts[i + 1] = outputAmount;\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\n        route.input,\n        amount.numerator,\n        amount.denominator\n      );\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\n        route.output,\n        tokenAmounts[tokenAmounts.length - 1].numerator,\n        tokenAmounts[tokenAmounts.length - 1].denominator\n      );\n    } else {\n      invariant(amount.currency.equals(route.output), \"OUTPUT\");\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped;\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1];\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i]);\n        tokenAmounts[i - 1] = inputAmount;\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\n        route.input,\n        tokenAmounts[0].numerator,\n        tokenAmounts[0].denominator\n      );\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\n        route.output,\n        amount.numerator,\n        amount.denominator\n      );\n    }\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.quotient,\n      this.outputAmount.quotient\n    );\n    this.priceImpact = computePriceImpact(\n      route.midPrice,\n      this.inputAmount,\n      this.outputAmount\n    );\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\n    invariant(!slippageTolerance.lessThan(ZERO), \"SLIPPAGE_TOLERANCE\");\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount;\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.quotient).quotient;\n      return CurrencyAmount.fromRawAmount(\n        this.outputAmount.currency,\n        slippageAdjustedAmountOut\n      );\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\n    invariant(!slippageTolerance.lessThan(ZERO), \"SLIPPAGE_TOLERANCE\");\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount;\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE)\n        .add(slippageTolerance)\n        .multiply(this.inputAmount.quotient).quotient;\n      return CurrencyAmount.fromRawAmount(\n        this.inputAmount.currency,\n        slippageAdjustedAmountIn\n      );\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param nextAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn<\n    TInput extends Currency,\n    TOutput extends Currency\n  >(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount<TInput>,\n    currencyOut: TOutput,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\n    invariant(pairs.length > 0, \"PAIRS\");\n    invariant(maxHops > 0, \"MAX_HOPS\");\n    invariant(\n      currencyAmountIn === nextAmountIn || currentPairs.length > 0,\n      \"INVALID_RECURSION\"\n    );\n\n    const amountIn = nextAmountIn.wrapped;\n    const tokenOut = currencyOut.wrapped;\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i];\n      // pair irrelevant\n      if (\n        !pair.token0.equals(amountIn.currency) &&\n        !pair.token1.equals(amountIn.currency)\n      )\n        continue;\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue;\n\n      let amountOut: CurrencyAmount<Token>;\n      try {\n        [amountOut] = pair.getOutputAmount(amountIn);\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue;\n        }\n        throw error;\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.currency.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route(\n              [...currentPairs, pair],\n              currencyAmountIn.currency,\n              currencyOut\n            ),\n            currencyAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        );\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs\n          .slice(0, i)\n          .concat(pairs.slice(i + 1, pairs.length));\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          currencyAmountIn,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [...currentPairs, pair],\n          amountOut,\n          bestTrades\n        );\n      }\n    }\n\n    return bestTrades;\n  }\n\n  /**\n   * Return the execution price after accounting for slippage tolerance\n   * @param slippageTolerance the allowed tolerated slippage\n   */\n  public worstExecutionPrice(\n    slippageTolerance: Percent\n  ): Price<TInput, TOutput> {\n    return new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.maximumAmountIn(slippageTolerance).quotient,\n      this.minimumAmountOut(slippageTolerance).quotient\n    );\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param nextAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut<\n    TInput extends Currency,\n    TOutput extends Currency\n  >(\n    pairs: Pair[],\n    currencyIn: TInput,\n    currencyAmountOut: CurrencyAmount<TOutput>,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\n    invariant(pairs.length > 0, \"PAIRS\");\n    invariant(maxHops > 0, \"MAX_HOPS\");\n    invariant(\n      currencyAmountOut === nextAmountOut || currentPairs.length > 0,\n      \"INVALID_RECURSION\"\n    );\n\n    const amountOut = nextAmountOut.wrapped;\n    const tokenIn = currencyIn.wrapped;\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i];\n      // pair irrelevant\n      if (\n        !pair.token0.equals(amountOut.currency) &&\n        !pair.token1.equals(amountOut.currency)\n      )\n        continue;\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue;\n\n      let amountIn: CurrencyAmount<Token>;\n      try {\n        [amountIn] = pair.getInputAmount(amountOut);\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue;\n        }\n        throw error;\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.currency.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route(\n              [pair, ...currentPairs],\n              currencyIn,\n              currencyAmountOut.currency\n            ),\n            currencyAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        );\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs\n          .slice(0, i)\n          .concat(pairs.slice(i + 1, pairs.length));\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          currencyAmountOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1\n          },\n          [pair, ...currentPairs],\n          amountIn,\n          bestTrades\n        );\n      }\n    }\n\n    return bestTrades;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nexport interface RToken {\n  name: string;\n  address: string;\n}\n\nexport enum PoolType {\n  ConstantProduct = \"ConstantProduct\",\n  Weighted = \"Weighted\",\n  Hybrid = \"Hybrid\",\n  ConcentratedLiquidity = \"ConcentratedLiquidity\"\n}\n\nexport interface PoolInfo {\n  address: string;\n  token0: RToken;\n  token1: RToken;\n  type: PoolType;\n  reserve0: BigNumber;\n  reserve1: BigNumber;\n  fee: number;\n  minLiquidity: number;\n  swapGasCost: number;\n}\n\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;\ntype PoolInfoWithDefaults = PartialBy<PoolInfo, \"minLiquidity\" | \"swapGasCost\">;\n\nexport class Pool {\n  address: string;\n  token0: RToken;\n  token1: RToken;\n  type: PoolType;\n  reserve0: BigNumber;\n  reserve1: BigNumber;\n  fee: number;\n  minLiquidity: number;\n  swapGasCost: number;\n\n  constructor(_info: PoolInfoWithDefaults) {\n    const info = {\n      minLiquidity: 1000,\n      swapGasCost: 40_000,\n      ..._info\n    };\n    this.address = info.address;\n    this.token0 = info.token0;\n    this.token1 = info.token1;\n    this.type = info.type;\n    this.reserve0 = info.reserve0;\n    this.reserve1 = info.reserve1;\n    this.fee = info.fee;\n    this.minLiquidity = info.minLiquidity;\n    this.swapGasCost = info.swapGasCost;\n  }\n}\n\ntype PoolInfoNoType = Omit<PoolInfoWithDefaults, \"type\">;\n\nexport class ConstantProductPool extends Pool {\n  constructor(info: PoolInfoNoType) {\n    super({\n      type: PoolType.ConstantProduct,\n      ...info\n    });\n  }\n}\n\ntype HybridPoolInfo = PoolInfoNoType & { A: number };\n\nexport class HybridPool extends Pool {\n  A: number;\n  constructor(info: HybridPoolInfo) {\n    super({\n      type: PoolType.Hybrid,\n      ...info\n    });\n    this.A = info.A;\n  }\n}\n\ntype WeightedPoolInfo = PoolInfoNoType & { weight0: number; weight1: number };\n\nexport class WeightedPool extends Pool {\n  weight0: number;\n  weight1: number;\n  constructor(info: WeightedPoolInfo) {\n    super({\n      type: PoolType.Weighted,\n      ...info\n    });\n    this.weight0 = info.weight0;\n    this.weight1 = info.weight1;\n  }\n}\n\nexport interface RouteLeg {\n  address: string;\n  token: RToken;\n  swapPortion: number; // For router contract\n  absolutePortion: number; // To depict at webpage for user\n}\n\nexport interface MultiRoute {\n  amountIn: number;\n  amountOut: number;\n  legs: RouteLeg[];\n  gasSpent: number;\n  totalAmountOut: number;\n}\n","export const types = {\n  EIP712Domain: [\n    { name: \"name\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" }\n  ],\n  LimitOrder: [\n    { name: \"maker\", type: \"address\" },\n    { name: \"tokenIn\", type: \"address\" },\n    { name: \"tokenOut\", type: \"address\" },\n    { name: \"amountIn\", type: \"uint256\" },\n    { name: \"amountOut\", type: \"uint256\" },\n    { name: \"recipient\", type: \"address\" },\n    { name: \"startTime\", type: \"uint256\" },\n    { name: \"endTime\", type: \"uint256\" },\n    { name: \"stopPrice\", type: \"uint256\" },\n    { name: \"oracleAddress\", type: \"address\" },\n    { name: \"oracleData\", type: \"bytes32\" }\n  ]\n};\n\nexport const bentoTypes = {\n  EIP712Domain: [\n    { name: \"name\", type: \"string\" },\n    { name: \"chainId\", type: \"uint256\" },\n    { name: \"verifyingContract\", type: \"address\" }\n  ],\n  SetMasterContractApproval: [\n    { name: \"warning\", type: \"string\" },\n    { name: \"user\", type: \"address\" },\n    { name: \"masterContract\", type: \"address\" },\n    { name: \"approved\", type: \"bool\" },\n    { name: \"nonce\", type: \"uint256\" }\n  ]\n};\nexport const name = \"LimitOrder\";\n","import { BENTOBOX_ADDRESS, STOP_LIMIT_ORDER_ADDRESS } from \"../constants\";\nimport { bentoTypes, name, types } from \"../types\";\n\nimport { ChainId } from \"enums\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { getMessage } from \"eip-712\";\nimport { splitSignature } from \"@ethersproject/bytes\";\n\nexport interface Domain {\n  name: string;\n  chainId: ChainId;\n  verifyingContract: string;\n}\n\nexport interface Message {\n  maker: string;\n  tokenIn: string;\n  tokenOut: string;\n  amountIn: string;\n  amountOut: string;\n  recipient: string;\n  startTime: string;\n  endTime: string;\n  stopPrice: string;\n  oracleAddress: string;\n  oracleData: string;\n}\n\nexport interface BentoApprovalMessage {\n  warning: string;\n  user: string;\n  masterContract: string;\n  approved: boolean;\n  nonce: number;\n}\n\nexport const getSignature = (\n  message: Message,\n  chainId: ChainId,\n  privateKey: string\n) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  };\n  return sign(\n    { types, primaryType: \"LimitOrder\", domain, message },\n    privateKey\n  );\n};\n\nexport const getTypedData = (message: Message, chainId: ChainId) => {\n  let domain: Domain = {\n    name: name,\n    chainId: chainId,\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\n  };\n  return { types, primaryType: \"LimitOrder\", domain, message };\n};\n\nexport const getTypedDataBento = (\n  message: BentoApprovalMessage,\n  chainId: ChainId\n) => {\n  let domain: Domain = {\n    name: \"BentoBox V1\",\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  };\n  return {\n    types: bentoTypes,\n    primaryType: \"SetMasterContractApproval\",\n    domain,\n    message\n  };\n};\n\nexport const getTypeHash = (typedData: any) => {\n  let message = getMessage(typedData, true).toString(\"hex\");\n  return `0x${message}`;\n};\n\nconst sign = (typedData: any, privateKey: string) => {\n  let message = getMessage(typedData, true);\n  const signingKey = new SigningKey(privateKey);\n  const { v, r, s } = signingKey.signDigest(message);\n  return { v, r, s };\n};\n\nexport const getSignatureWithProvider = async (\n  message: Message,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedData(message, chainId);\n  const signature = await provider.send(\"eth_signTypedData_v4\", [\n    message.maker,\n    JSON.stringify(typedData)\n  ]);\n  const { v, r, s } = splitSignature(signature);\n  return { v, r, s };\n};\n\nexport const getSignatureWithProviderBentobox = async (\n  message: BentoApprovalMessage,\n  chainId: ChainId,\n  provider: Web3Provider\n): Promise<{ v: number; r: string; s: string }> => {\n  const typedData = getTypedDataBento(message, chainId);\n  const signature = await provider.send(\"eth_signTypedData_v4\", [\n    message.user,\n    JSON.stringify(typedData)\n  ]);\n  const { v, r, s } = splitSignature(signature);\n  return { v, r, s };\n};\n\nexport const getSignatureBento = async (\n  bentoApproval: BentoApprovalMessage,\n  chainId: ChainId,\n  privateKey: string\n) => {\n  let domain: Domain = {\n    name: \"BentoBox V1\",\n    chainId: chainId,\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\n  };\n  return sign(\n    {\n      types: bentoTypes,\n      primaryType: \"SetMasterContractApproval\",\n      domain,\n      message: bentoApproval\n    },\n    privateKey\n  );\n};\n","import { SOLIDITY_TYPE_MAXIMA, SolidityType, ZERO } from \"../constants\";\n\nimport JSBI from \"jsbi\";\nimport invariant from \"tiny-invariant\";\n\nexport function validateSolidityTypeInstance(\n  value: JSBI,\n  solidityType: SolidityType\n): void {\n  invariant(\n    JSBI.greaterThanOrEqual(value, ZERO),\n    `${value} is not a ${solidityType}.`\n  );\n  invariant(\n    JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]),\n    `${value} is not a ${solidityType}.`\n  );\n}\n","import { Currency } from \"./entities/Currency\";\nimport { CurrencyAmount } from \"./entities/CurrencyAmount\";\nimport { Percent } from \"./entities/Percent\";\nimport { Token } from \"./entities/Token\";\nimport { Trade } from \"./entities/Trade\";\nimport { TradeType } from \"./enums/TradeType\";\nimport invariant from \"tiny-invariant\";\nimport { validateAndParseAddress } from \"./functions/validateAndParseAddress\";\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent;\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number;\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string;\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean;\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, \"ttl\"> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number;\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string;\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[];\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string;\n}\n\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\n  return `0x${currencyAmount.quotient.toString(16)}`;\n}\n\nconst ZERO_HEX = \"0x0\";\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(\n    trade: Trade<Currency, Currency, TradeType>,\n    options: TradeOptions | TradeOptionsDeadline\n  ): SwapParameters {\n    const etherIn = trade.inputAmount.currency.isNative;\n    const etherOut = trade.outputAmount.currency.isNative;\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), \"ETHER_IN_OUT\");\n    invariant(!(\"ttl\" in options) || options.ttl > 0, \"TTL\");\n\n    const to: string = validateAndParseAddress(options.recipient);\n    const amountIn: string = toHex(\n      trade.maximumAmountIn(options.allowedSlippage)\n    );\n    const amountOut: string = toHex(\n      trade.minimumAmountOut(options.allowedSlippage)\n    );\n    const path: string[] = trade.route.path.map(\n      (token: Token) => token.address\n    );\n    const deadline =\n      \"ttl\" in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(\n            16\n          )}`\n        : `0x${options.deadline.toString(16)}`;\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer);\n\n    let methodName: string;\n    let args: (string | string[])[];\n    let value: string;\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer\n            ? \"swapExactETHForTokensSupportingFeeOnTransferTokens\"\n            : \"swapExactETHForTokens\";\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer\n            ? \"swapExactTokensForETHSupportingFeeOnTransferTokens\"\n            : \"swapExactTokensForETH\";\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = useFeeOnTransfer\n            ? \"swapExactTokensForTokensSupportingFeeOnTransferTokens\"\n            : \"swapExactTokensForTokens\";\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline];\n          value = ZERO_HEX;\n        }\n        break;\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, \"EXACT_OUT_FOT\");\n        if (etherIn) {\n          methodName = \"swapETHForExactTokens\";\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline];\n          value = amountIn;\n        } else if (etherOut) {\n          methodName = \"swapTokensForExactETH\";\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        } else {\n          methodName = \"swapTokensForExactTokens\";\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline];\n          value = ZERO_HEX;\n        }\n        break;\n    }\n    return {\n      methodName,\n      args,\n      value\n    };\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport {\n  Pool,\n  PoolType,\n  HybridPool,\n  WeightedPool\n} from \"../types/MultiRouterTypes\";\n\nconst A_PRECISION = 100;\n\nconst DCacheBN = new Map<Pool, BigNumber>();\nexport function HybridComputeLiquidity(pool: HybridPool): BigNumber {\n  const res = DCacheBN.get(pool);\n  if (res != undefined) return res;\n\n  const r0 = pool.reserve0;\n  const r1 = pool.reserve1;\n\n  if (r0.isZero() && r1.isZero()) {\n    DCacheBN.set(pool, BigNumber.from(0));\n    return BigNumber.from(0);\n  }\n  const s = r0.add(r1);\n\n  const nA = BigNumber.from(pool.A * 2);\n\n  let prevD;\n\n  let D = s;\n  for (let i = 0; i < 256; i++) {\n    const dP = D.mul(D)\n      .div(r0)\n      .mul(D)\n      .div(r1)\n      .div(4);\n    prevD = D;\n    D = nA\n      .mul(s)\n      .div(A_PRECISION)\n      .add(dP.mul(2))\n      .mul(D)\n      .div(\n        nA\n          .div(A_PRECISION)\n          .sub(1)\n          .mul(D)\n          .add(dP.mul(3))\n      );\n    if (\n      D.sub(prevD)\n        .abs()\n        .lte(1)\n    ) {\n      break;\n    }\n  }\n  DCacheBN.set(pool, D);\n  return D;\n}\n\nexport function HybridgetY(pool: HybridPool, x: BigNumber): BigNumber {\n  const D = HybridComputeLiquidity(pool);\n\n  const nA = pool.A * 2;\n\n  let c = D.mul(D)\n    .div(x.mul(2))\n    .mul(D)\n    .div((nA * 2) / A_PRECISION);\n  let b = D.mul(A_PRECISION)\n    .div(nA)\n    .add(x);\n\n  let yPrev;\n  let y = D;\n  for (let i = 0; i < 256; i++) {\n    yPrev = y;\n\n    y = y\n      .mul(y)\n      .add(c)\n      .div(\n        y\n          .mul(2)\n          .add(b)\n          .sub(D)\n      );\n    if (\n      y\n        .sub(yPrev)\n        .abs()\n        .lte(1)\n    ) {\n      break;\n    }\n  }\n  return y;\n}\n\nexport function calcOutByIn(\n  pool: Pool,\n  amountIn: number,\n  direction = true\n): number {\n  const xBN = direction ? pool.reserve0 : pool.reserve1;\n  const yBN = direction ? pool.reserve1 : pool.reserve0;\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString());\n      const y = parseInt(yBN.toString());\n      return (y * amountIn) / (x / (1 - pool.fee) + amountIn);\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString());\n      const y = parseInt(yBN.toString());\n      const wPool = pool as WeightedPool;\n      const weightRatio = direction\n        ? wPool.weight0 / wPool.weight1\n        : wPool.weight1 / wPool.weight0;\n      const actualIn = amountIn * (1 - pool.fee);\n      return y * (1 - Math.pow(x / (x + actualIn), weightRatio));\n    }\n    case PoolType.Hybrid: {\n      // const xNew = x + amountIn*(1-pool.fee);\n      // const yNew = HybridgetY(pool, xNew);\n      // const dy = y - yNew;\n\n      const xNewBN = xBN.add(\n        getBigNumber(undefined, amountIn * (1 - pool.fee))\n      );\n      const yNewBN = HybridgetY(pool as HybridPool, xNewBN);\n      const dy = parseInt(yBN.sub(yNewBN).toString());\n\n      return dy;\n    }\n  }\n  console.error(\"Unknown pool type\");\n  return 0;\n}\n\nexport function calcInByOut(\n  pool: Pool,\n  amountOut: number,\n  direction: boolean\n): number {\n  let input = 0;\n  const xBN = direction ? pool.reserve0 : pool.reserve1;\n  const yBN = direction ? pool.reserve1 : pool.reserve0;\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = parseInt(xBN.toString());\n      const y = parseInt(yBN.toString());\n      input = (x * amountOut) / (1 - pool.fee) / (y - amountOut);\n      break;\n    }\n    case PoolType.Weighted: {\n      const x = parseInt(xBN.toString());\n      const y = parseInt(yBN.toString());\n      const wPool = pool as WeightedPool;\n      const weightRatio = direction\n        ? wPool.weight0 / wPool.weight1\n        : wPool.weight1 / wPool.weight0;\n      input =\n        x * (1 - pool.fee) * (Math.pow(1 - amountOut / y, -weightRatio) - 1);\n      break;\n    }\n    case PoolType.Hybrid: {\n      const yNewBN = yBN.sub(getBigNumber(undefined, amountOut));\n      const xNewBN = HybridgetY(pool as HybridPool, yNewBN);\n      input = Math.round(parseInt(xNewBN.sub(xBN).toString()) / (1 - pool.fee));\n\n      // const yNew = y - amountOut;\n      // const xNew = HybridgetY(pool, yNew);\n      // input = (xNew - x)/(1-pool.fee);\n      break;\n    }\n    default:\n      console.error(\"Unknown pool type\");\n  }\n\n  ASSERT(() => {\n    const amount2 = calcOutByIn(pool, input, direction);\n    const res = closeValues(amountOut, amount2, 1e-6);\n    if (!res) console.log(\"Error 138:\", amountOut, amount2);\n    return res;\n  });\n  return input;\n}\n\nexport function calcPrice(pool: Pool, amountIn: number): number {\n  const r0 = parseInt(pool.reserve0.toString());\n  const r1 = parseInt(pool.reserve1.toString());\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const x = r0 / (1 - pool.fee);\n      return (r1 * x) / (x + amountIn) / (x + amountIn);\n    }\n    case PoolType.Weighted: {\n      const wPool = pool as WeightedPool;\n      const weightRatio = wPool.weight0 / wPool.weight1;\n      const x = r0 + amountIn * (1 - pool.fee);\n      return (\n        (r1 * weightRatio * (1 - pool.fee) * Math.pow(r0 / x, weightRatio)) / x\n      );\n    }\n    case PoolType.Hybrid: {\n      const hPool = pool as HybridPool;\n      const D = parseInt(HybridComputeLiquidity(hPool).toString());\n      const A = hPool.A / A_PRECISION;\n      const x = r0 + amountIn;\n      const b = 4 * A * x + D - 4 * A * D;\n      const ac4 = (D * D * D) / x;\n      const Ds = Math.sqrt(b * b + 4 * A * ac4);\n      const res = (0.5 - (2 * b - ac4 / x) / Ds / 4) * (1 - pool.fee);\n      return res;\n    }\n  }\n  return 0;\n}\n\nfunction calcInputByPriceConstantMean(pool: WeightedPool, price: number) {\n  const r0 = parseInt(pool.reserve0.toString());\n  const r1 = parseInt(pool.reserve1.toString());\n  const weightRatio = pool.weight0 / pool.weight1;\n  const t =\n    r1 * price * weightRatio * (1 - pool.fee) * Math.pow(r0, weightRatio);\n  return (Math.pow(t, 1 / (weightRatio + 1)) - r0) / (1 - pool.fee);\n}\n\nexport function calcInputByPrice(\n  pool: Pool,\n  priceEffective: number,\n  hint = 1\n): number {\n  switch (pool.type) {\n    case PoolType.ConstantProduct: {\n      const r0 = parseInt(pool.reserve0.toString());\n      const r1 = parseInt(pool.reserve1.toString());\n      const x = r0 / (1 - pool.fee);\n      const res = Math.sqrt(r1 * x * priceEffective) - x;\n      return res;\n    }\n    case PoolType.Weighted: {\n      const res = calcInputByPriceConstantMean(\n        pool as WeightedPool,\n        priceEffective\n      );\n      return res;\n    }\n    case PoolType.Hybrid: {\n      return revertPositive(\n        (x: number) => 1 / calcPrice(pool, x),\n        priceEffective,\n        hint\n      );\n    }\n  }\n  return 0;\n}\n\n//====================== Utils ========================\n\nexport function ASSERT(f: () => boolean, t?: string) {\n  if (!f() && t) console.error(t);\n}\n\nexport function closeValues(a: number, b: number, accuracy: number): boolean {\n  if (accuracy == 0) return a == b;\n  if (a < 1 / accuracy) return Math.abs(a - b) <= 10;\n  return Math.abs(a / b - 1) < accuracy;\n}\n\nexport function calcSquareEquation(\n  a: number,\n  b: number,\n  c: number\n): [number, number] {\n  const D = b * b - 4 * a * c;\n  console.assert(D >= 0, `Discriminant is negative! ${a} ${b} ${c}`);\n  const sqrtD = Math.sqrt(D);\n  return [(-b - sqrtD) / 2 / a, (-b + sqrtD) / 2 / a];\n}\n\n// returns such x > 0 that f(x) = out or 0 if there is no such x or f defined not everywhere\n// hint - approximation of x to spead up the algorithm\n// f assumed to be continues monotone growth function defined everywhere\nexport function revertPositive(\n  f: (x: number) => number,\n  out: number,\n  hint = 1\n) {\n  try {\n    if (out <= f(0)) return 0;\n    let min, max;\n    if (f(hint) > out) {\n      min = hint / 2;\n      while (f(min) > out) min /= 2;\n      max = min * 2;\n    } else {\n      max = hint * 2;\n      while (f(max) < out) max *= 2;\n      min = max / 2;\n    }\n\n    while (max / min - 1 > 1e-4) {\n      const x0: number = (min + max) / 2;\n      const y0 = f(x0);\n      if (out == y0) return x0;\n      if (out < y0) max = x0;\n      else min = x0;\n    }\n    return (min + max) / 2;\n  } catch (e) {\n    return 0;\n  }\n}\n\nexport function getBigNumber(\n  valueBN: BigNumber | undefined,\n  value: number\n): BigNumber {\n  if (valueBN !== undefined) return valueBN;\n\n  if (value < Number.MAX_SAFE_INTEGER) return BigNumber.from(Math.round(value));\n\n  const exp = Math.floor(Math.log(value) / Math.LN2);\n  console.assert(exp >= 51, \"Internal Error 314\");\n  const shift = exp - 51;\n  const mant = Math.round(value / Math.pow(2, shift));\n  const res = BigNumber.from(mant).mul(BigNumber.from(2).pow(shift));\n  return res;\n}\n","import { CurrencyAmount, Price, Token } from \"./entities\";\nimport { LAMBDA_URL, STOP_LIMIT_ORDER_ADDRESS } from \"./constants\";\nimport {\n  Message,\n  getSignature,\n  getSignatureWithProvider,\n  getTypeHash,\n  getTypedData\n} from \"./entities\";\n\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { ChainId } from \"./enums\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { NonceManager } from \"@ethersproject/experimental\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { Transaction } from \"@ethersproject/transactions\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport abi from \"./abis/StopLimitOrder.json\";\nimport { defaultAbiCoder } from \"@ethersproject/abi\";\nimport fetch from \"isomorphic-unfetch\";\nimport { keccak256 } from \"@ethersproject/solidity\";\nimport { validateAndParseAddress } from \"./functions/validateAndParseAddress\";\n\nexport interface ILimitOrderData {\n  maker: string;\n  tokenIn: string;\n  tokenOut: string;\n  tokenInDecimals: number;\n  tokenOutDecimals: number;\n  tokenInSymbol: string;\n  tokenOutSymbol: string;\n  amountIn: string;\n  amountOut: string;\n  recipient: string;\n  startTime: string | number;\n  endTime: string | number;\n  stopPrice?: string;\n  oracleAddress?: string;\n  oracleData?: string;\n  v: number;\n  r: string;\n  s: string;\n  chainId: ChainId;\n  orderTypeHash?: string;\n}\n\nexport class LimitOrder {\n  public readonly maker: string;\n  public readonly amountIn: CurrencyAmount<Token>;\n  public readonly amountOut: CurrencyAmount<Token>;\n  public readonly recipient: string;\n  public readonly startTime: string;\n  public readonly endTime: string;\n  public readonly stopPrice: string;\n  public readonly oracleAddress: string;\n  public readonly oracleData: string;\n  public v: number;\n  public r: string;\n  public s: string;\n\n  static getLimitOrder(data: ILimitOrderData): LimitOrder {\n    return new LimitOrder(\n      data.maker,\n      CurrencyAmount.fromRawAmount(\n        new Token(\n          data.chainId,\n          data.tokenIn,\n          data.tokenInDecimals,\n          data.tokenInSymbol\n        ),\n        data.amountIn\n      ),\n      CurrencyAmount.fromRawAmount(\n        new Token(\n          data.chainId,\n          data.tokenOut,\n          data.tokenOutDecimals,\n          data.tokenOutSymbol\n        ),\n        data.amountOut\n      ),\n      data.recipient,\n      data.startTime,\n      data.endTime,\n      data.stopPrice,\n      data.oracleAddress,\n      data.oracleData,\n      data.v,\n      data.r,\n      data.s\n    );\n  }\n\n  constructor(\n    maker: string,\n    amountIn: CurrencyAmount<Token>,\n    amountOut: CurrencyAmount<Token>,\n    recipient: string,\n    startTime: string | number,\n    endTime: string | number,\n    stopPrice = \"0\",\n    oracleAddress = \"0x0000000000000000000000000000000000000000\",\n    oracleData = \"0x00000000000000000000000000000000000000000000000000000000000000\",\n    v = 0,\n    r = \"\",\n    s = \"\"\n  ) {\n    this.maker = validateAndParseAddress(maker);\n    this.amountIn = amountIn;\n    this.amountOut = amountOut;\n    this.recipient = validateAndParseAddress(recipient);\n    this.startTime = startTime.toString();\n    this.endTime = endTime.toString();\n    this.stopPrice = stopPrice;\n    this.oracleAddress = validateAndParseAddress(oracleAddress);\n    this.oracleData = oracleData;\n    this.v = v;\n    this.r = r;\n    this.s = s;\n  }\n\n  get amountInRaw(): string {\n    return this.amountIn.quotient.toString();\n  }\n\n  get amountOutRaw(): string {\n    return this.amountOut.quotient.toString();\n  }\n\n  get tokenInAddress(): string {\n    return this.amountIn.currency.address;\n  }\n\n  get tokenOutAddress(): string {\n    return this.amountOut.currency.address;\n  }\n\n  get tokenInDecimals(): number {\n    return this.amountIn.currency.decimals;\n  }\n\n  get tokenOutDecimals(): number {\n    return this.amountOut.currency.decimals;\n  }\n\n  get tokenInSymbol(): string {\n    return this.amountIn.currency.symbol || \"\";\n  }\n\n  get tokenOutSymbol(): string {\n    return this.amountOut.currency.symbol || \"\";\n  }\n\n  get chainId(): ChainId {\n    return this.amountIn.currency.chainId;\n  }\n\n  usePrice(price: Price<Token, Token>): LimitOrder {\n    return new LimitOrder(\n      this.maker,\n      this.amountIn,\n      CurrencyAmount.fromRawAmount(\n        this.amountOut.currency,\n        price.quote(this.amountIn).quotient.toString()\n      ),\n      this.recipient,\n      this.startTime,\n      this.endTime,\n      this.stopPrice,\n      this.oracleAddress,\n      this.oracleData\n    );\n  }\n\n  signdOrderWithPrivatekey(chainId: ChainId, privateKey: string) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256([\"bytes\"], [this.oracleData])\n    };\n\n    const { v, r, s } = getSignature(order, chainId, privateKey);\n\n    this.v = v;\n    this.r = r;\n    this.s = s;\n\n    return { v, r, s };\n  }\n\n  async signOrderWithProvider(chainId: ChainId, provider: Web3Provider) {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256([\"bytes\"], [this.oracleData])\n    };\n\n    const { v, r, s } = await getSignatureWithProvider(\n      order,\n      chainId,\n      provider\n    );\n\n    this.v = v;\n    this.r = r;\n    this.s = s;\n\n    return { v, r, s };\n  }\n\n  getTypedData() {\n    let order: Message = {\n      maker: this.maker,\n      tokenIn: this.tokenInAddress,\n      tokenOut: this.tokenOutAddress,\n      amountIn: this.amountInRaw,\n      amountOut: this.amountOutRaw,\n      recipient: this.recipient,\n      startTime: this.startTime,\n      endTime: this.endTime,\n      stopPrice: this.stopPrice,\n      oracleAddress: this.oracleAddress,\n      oracleData: keccak256([\"bytes\"], [this.oracleData])\n    };\n\n    return getTypedData(order, this.chainId);\n  }\n\n  getTypeHash() {\n    let typedData = this.getTypedData();\n    let digest = getTypeHash(typedData);\n    return digest;\n  }\n\n  async send() {\n    const resp = await fetch(`${LAMBDA_URL}/orders/create`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        maker: this.maker,\n        tokenIn: this.tokenInAddress,\n        tokenOut: this.tokenOutAddress,\n        tokenInDecimals: this.tokenInDecimals,\n        tokenOutDecimals: this.tokenOutDecimals,\n        tokenInSymbol: this.tokenInSymbol,\n        tokenOutSymbol: this.tokenOutSymbol,\n        amountIn: this.amountInRaw,\n        amountOut: this.amountOutRaw,\n        recipient: this.recipient,\n        startTime: this.startTime,\n        endTime: this.endTime,\n        stopPrice: this.stopPrice,\n        oracleAddress: this.oracleAddress,\n        oracleData: this.oracleData,\n        v: this.v,\n        r: this.r,\n        s: this.s,\n        chainId: this.amountIn.currency.chainId\n      })\n    });\n\n    return resp.json();\n  }\n}\n\nexport class FillLimitOrder {\n  public readonly order: LimitOrder;\n  public readonly path: string[];\n  public readonly amountExternal: BigNumber;\n  public readonly amountToFill: BigNumber;\n  public readonly limitOrderReceiver: string;\n  public readonly to: string;\n  public readonly tokenIn: string;\n  public readonly tokenOut: string;\n  public readonly limitOrderReceiverData: string;\n\n  constructor(\n    order: LimitOrder,\n    path: string[],\n    amountExternal: BigNumber,\n    amountToFill: BigNumber,\n    limitOrderReceiver: string,\n    to: string,\n    keepTokenIn = false\n  ) {\n    this.order = order;\n    this.path = path.map(validateAndParseAddress);\n    this.amountExternal = amountExternal;\n    this.amountToFill = amountToFill;\n    this.limitOrderReceiver = validateAndParseAddress(limitOrderReceiver);\n    this.to = validateAndParseAddress(to);\n    this.tokenIn = order.amountIn.currency.address;\n    this.tokenOut = order.amountOut.currency.address;\n\n    this.limitOrderReceiverData = defaultAbiCoder.encode(\n      [\"address[]\", \"uint256\", \"address\", \"bool\"],\n      [this.path, this.amountExternal.toString(), this.to, keepTokenIn]\n    );\n  }\n\n  public fillOrderOpen(\n    signer: Signer,\n    extra: {\n      forceExecution?: boolean;\n      gasPrice?: BigNumber;\n      nonce?: number;\n      debug?: boolean;\n      open?: boolean;\n    }\n  ) {\n    extra.open = true;\n    return this.fillOrder(signer, extra);\n  }\n\n  public async fillOrder(\n    signer: Signer | NonceManager,\n    extra: {\n      debug?: boolean;\n      forceExecution?: boolean;\n      gasPrice?: BigNumber;\n      open?: boolean;\n      nonce?: number;\n    }\n  ): Promise<{ executed: boolean; transaction?: Transaction }> {\n    const { gasPrice, nonce, forceExecution = false, open = false } = extra;\n\n    const func = open ? \"fillOrderOpen\" : \"fillOrder\";\n\n    const orderArg = [\n      this.order.maker,\n      this.order.amountInRaw,\n      this.order.amountOutRaw,\n      this.order.recipient,\n      this.order.startTime,\n      this.order.endTime,\n      this.order.stopPrice,\n      this.order.oracleAddress,\n      this.order.oracleData,\n      this.amountToFill.toString(),\n      this.order.v,\n      this.order.r,\n      this.order.s\n    ];\n\n    const limitOrderContract = new Contract(\n      STOP_LIMIT_ORDER_ADDRESS[this.order.chainId],\n      abi,\n      signer\n    );\n\n    let gasLimit;\n    let executed = true;\n\n    if (extra.debug)\n      console.log(\n        orderArg,\n        this.path,\n        this.limitOrderReceiver,\n        this.limitOrderReceiverData\n      );\n\n    try {\n      gasLimit = await limitOrderContract.estimateGas[func](\n        orderArg,\n        this.path[0],\n        this.path[this.path.length - 1],\n        this.limitOrderReceiver,\n        this.limitOrderReceiverData\n      );\n      gasLimit = gasLimit.mul(11).div(10);\n    } catch (e) {\n      if (forceExecution) {\n        console.log(\"Failed to estimate gas, forcing execution\");\n        gasLimit = BigNumber.from(\"400000\"); // 400k\n        executed = true;\n      } else {\n        return { executed: false };\n      }\n    }\n\n    const transaction: Transaction = await limitOrderContract.fillOrder(\n      orderArg,\n      this.path[0],\n      this.path[this.path.length - 1],\n      this.limitOrderReceiver,\n      this.limitOrderReceiverData,\n      { gasLimit, gasPrice, nonce }\n    );\n\n    return { executed, transaction };\n  }\n}\n"],"names":["ChainId","Rounding","TradeType","KashiAction","FACTORY_ADDRESS","MAINNET","ROPSTEN","RINKEBY","GÖRLI","KOVAN","FANTOM","FANTOM_TESTNET","MATIC","MATIC_TESTNET","XDAI","BSC","BSC_TESTNET","ARBITRUM","ARBITRUM_TESTNET","MOONBEAM_TESTNET","AVALANCHE","AVALANCHE_TESTNET","HECO","HECO_TESTNET","HARMONY","HARMONY_TESTNET","OKEX","OKEX_TESTNET","CELO","PALM","PALM_TESTNET","ROUTER_ADDRESS","MONEY_ADDRESS","FARMING_ADDRESS","STAKING_ADDRESS","TIME_ADDRESS","MIGRATOR_ADDRESS","WETH_ADDRESS","BUYBACK_ADDRESS","RESERVE_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","MAKER_ADDRESS","HODL_SWAPPER_ADDRESS","HODL_MULTISWAPPER_ADDRESS","HODL_MULTI_EXACT_SWAPPER_ADDRESS","PEGGED_ORACLE_ADDRESS","HODL_TWAP_0_ORACLE_ADDRESS","HODL_TWAP_1_ORACLE_ADDRESS","CHAINLINK_ORACLE_ADDRESS","BORING_HELPER_ADDRESS","STOP_LIMIT_ORDER_ADDRESS","ARCHER_ROUTER_ADDRESS","MINICHEF_ADDRESS","WETH9_ADDRESS","WNATIVE_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","Token","equals","other","isToken","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","WETH9","WNATIVE","Avalanche","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Okex","xDai","Palm","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","_960","_980","INIT_CODE_HASH","MINIMUM_LIQUIDITY","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","LAMBDA_URL","SOCKET_URL","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","toExact","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePairAddress","factoryAddress","tokenA","tokenB","token0","token1","getCreate2Address","keccak256","pack","FeeAmount","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","Pair","currencyAmountA","tokenAmountB","tokenAmounts","liquidityToken","involvesToken","token","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","i","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","a","b","tradeComparator","ioComp","route","Trade","amount","tradeType","Array","EXACT_INPUT","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","undefined","PoolType","Pool","_info","info","minLiquidity","swapGasCost","type","fee","ConstantProductPool","ConstantProduct","HybridPool","Hybrid","A","WeightedPool","Weighted","weight0","weight1","types","EIP712Domain","LimitOrder","bentoTypes","SetMasterContractApproval","getSignature","message","privateKey","domain","verifyingContract","sign","primaryType","getTypedData","getTypedDataBento","getTypeHash","typedData","getMessage","signingKey","SigningKey","signDigest","v","r","s","getSignatureWithProvider","provider","send","maker","JSON","stringify","signature","splitSignature","getSignatureWithProviderBentobox","user","getSignatureBento","bentoApproval","validateSolidityTypeInstance","solidityType","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","to","recipient","allowedSlippage","map","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","A_PRECISION","DCacheBN","Map","HybridComputeLiquidity","pool","res","get","r0","r1","isZero","BigNumber","from","nA","prevD","D","dP","mul","sub","abs","lte","HybridgetY","c","yPrev","y","calcOutByIn","direction","xBN","yBN","parseInt","wPool","weightRatio","actualIn","pow","xNewBN","getBigNumber","yNewBN","dy","console","calcInByOut","round","ASSERT","amount2","closeValues","log","calcPrice","hPool","ac4","Ds","calcInputByPriceConstantMean","price","t","calcInputByPrice","priceEffective","hint","revertPositive","f","accuracy","calcSquareEquation","assert","sqrtD","out","min","max","x0","y0","e","valueBN","exp","LN2","shift","mant","startTime","endTime","stopPrice","oracleAddress","oracleData","getLimitOrder","data","tokenInDecimals","tokenInSymbol","tokenOutDecimals","tokenOutSymbol","usePrice","signdOrderWithPrivatekey","order","tokenInAddress","tokenOutAddress","amountInRaw","amountOutRaw","signOrderWithProvider","digest","fetch","method","body","resp","json","FillLimitOrder","amountExternal","amountToFill","limitOrderReceiver","keepTokenIn","limitOrderReceiverData","defaultAbiCoder","encode","fillOrderOpen","signer","extra","open","fillOrder","gasPrice","nonce","forceExecution","func","orderArg","limitOrderContract","Contract","abi","executed","debug","estimateGas","gasLimit","transaction"],"mappings":"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"}